#!/user/bin/bash

# --------------------------------------------------------------------------------------------------------------
#change color to blue before printing
# Color variables
BOLD="\033[1m"
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
blue='\033[0;34m'
magenta='\033[0;35m'
cyan='\033[0;36m'
# Clear the color after that
clear='\033[0m'
# Background Color variables
bg_red='\033[0;41m'
bg_green='\033[0;42m'
bg_yellow='\033[0;43m'
bg_blue='\033[0;44m'
bg_magenta='\033[0;45m'
bg_cyan='\033[0;46m'

#------------------------------------------------------------------------------------------------
#check_Constrain_Table_Name_Function 
#------------------------------------------------------------------------------------------------
check_Constrain_Table_Name()
{

    while true
    do
        if [[ $1 == *[" "'!':\|'-'/=~@\$%^\&*()+';''#']* || $1 == [" "'!':\|'-'/=~@\$%^\&*()+';''#']*[" "'!':\|'-'/=~@\$%^\&*()+';''#']*  ]]; then

            echo -e "${yellow}--------------------------------------------------------------------${clear}"
            echo -e "${red}1- Given name shoud not contain special char.${clear}"
            echo -e "${red}2- Given name shoud not contain space.${clear}"
            echo -e "${red}3- Given name shoud not contain number at the beginning of the name.${clear}"
            echo -e "${yellow}--------------------------------------------------------------------${clear}"
            Creat_check_Func 
            break

        elif [[ $1 == [0-99999]* || $1 == *[0-99999]*  ]]; then

            echo -e "${yellow}--------------------------------------------------------------------${clear}"
            echo -e "${red} * Given name shoud not contain numbers.${clear}"           
            echo -e "${yellow}--------------------------------------------------------------------${clear}"
            Creat_check_Func
            break

        elif [[ -e $1 ]];then

            echo -e "${yellow}--------------------------------------------------------------------${clear}"
            echo -e "${red} * There is an Existance File With The Same Name.${clear}"           
            echo -e "${yellow}--------------------------------------------------------------------${clear}"
            eval flag=0
            Creat_check_Func

        else

            break;

        fi
    done

}

#------------------------------------------------------------------------------------------------
#check_Colmun_Name_Function 
#------------------------------------------------------------------------------------------------
check_Colmun_Name()
{
    
    while true
    do
        if [[ $1 == *[" "'!':\|'-'/=~@\$%^\&*()+';''#']* || $1 == [" "'!':\|'-'/=~@\$%^\&*()+';''#']*[" "'!':\|'-'/=~@\$%^\&*()+';''#']*  ]]; then

            echo -e "${yellow}--------------------------------------------------------------------${clear}"
            echo -e "${red}1- Given name shoud not contain special char.${clear}"
            echo -e "${red}2- Given name shoud not contain space.${clear}"
            echo -e "${red}3- Given name shoud not contain number at the beginning of the name.${clear}"
            echo -e "${yellow}--------------------------------------------------------------------${clear}"
            read -p "Insert Name of Cloumn $(($2+1)) : " col_name
            check_Colmun_Name $col_name
            break

        elif [ $1 == \0 ];then

            echo -e "${yellow}--------------------------------------------------------------------${clear}"
            echo -e "${red} * Invalid Input * ${clear}"           
            echo -e "${yellow}--------------------------------------------------------------------${clear}"
            read -p "Insert Name of Cloumn $(($2+1)) : " col_name
            check_Colmun_Name $col_name
            break

        elif [[ $1 == [0-99999]* || $1 == *[0-99999]* || $1 == *[0-99999] ]]; then

            echo -e "${yellow}--------------------------------------------------------------------${clear}"
            echo -e "${red} * Given name shoud not contain numbers.${clear}"           
            echo -e "${yellow}--------------------------------------------------------------------${clear}"
            Insert_Meta_Data_Func
            break
       
        else

            break;

        fi
    done

}

#------------------------------------------------------------------------------------------------
#Insert_Meta_Data_Function 
#------------------------------------------------------------------------------------------------
Insert_Meta_Data_Func ()
{

    read -p " How Many Columns Do you want to Insert ? " colmuns
    echo -e "${cyan}\n < Hint : The First Value Will be a Primary Key >\n${clear}"

    for ((i=0;i<=$(($colmuns-1));i++));
    do
        if [[ $i == 0 ]];then
            read -p "Insert Name of Cloumn ($(($i+1))) : " col_name
            check_Colmun_Name $col_name $i
            read -p "Insert The data_type of colmun ($col_name) : " d_type
            check_Data_Type $col_name $d_type
            line="$col_name(PK)"" "$d_type

        else

            read -p "Insert Name of Cloumn $(($i+1)) : " col_name
            check_Colmun_Name $col_name $i
            read -p "Insert The data_type of colmun $col_name : " d_type
            check_Data_Type $col_name $d_type
            line=$col_name" "$d_type

        fi  

        echo -e $line >> "$1.meta"

    done
}

#------------------------------------------------------------------------------------------------
#check_Data_Type_Function 
#------------------------------------------------------------------------------------------------
check_Data_Type()
{

    while true
    do
        if [[ $2 == "int" || $2 == "var" || $d_type == "int" || $d_type == "var"  ]];then
            line=$1" "$2      
            break
        else
            read -p "Insert The data_type of colmun $1 : " d_type
        fi
    done
}

#------------------------------------------------------------------------------------------------
#Creat_Table_Function
#------------------------------------------------------------------------------------------------
Creat_Table_Func()
{

    echo -e "${yellow}\n--------------------------------------------------------------------${clear}"
    echo -e "${green} * The Table Is Created Successfully *${clear}"           
    echo -e "${yellow}--------------------------------------------------------------------\n${clear}"
    touch "$1.data"   
    touch "$1.meta" 
    Insert_Meta_Data_Func $1

}

#------------------------------------------------------------------------------------------------
#Creat_check_Function 
#------------------------------------------------------------------------------------------------
Creat_check_Func() 
{
    echo -e "${green}\n*------------------------------------- * Create Table * ----------------------------------*\n${clear}"
    read -p "Enter the Table name : " name
    shopt -s extglob
    check_Constrain_Table_Name $name
    Creat_Table_Func $name
    
}

#------------------------------------------------------------------------------------------------
#Calling
#------------------------------------------------------------------------------------------------

Creat_check_Func

